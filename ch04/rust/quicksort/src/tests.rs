#[cfg(test)]
#[path = "quicksort.rs"]
mod quicksort_tests {
  use crate::quicksort::quicksort_8_bits;

  #[test]
  fn test_quicksort_8_bits_full() {

    let unsorted_list: [i8; 256] = [
      11, -99, 101, 17, 2, 116, -44, 94, -70, 88, -84, 28, -33, -50, -104, -78,
      -15, -90, -69, 89, 114, -9, -47, 4, -124, 109, 80, -97, 38, 108, 98, 103,
      -105, -67, 81, 24, 121, -80, 115, -30, -26, -18, -61, -22, -125, 104, 61,
      -79, 1, 54, 20, -23, 43, -20, -35, 27, 0, 34, -121, -41, 26, -8, 95, -81,
      72, 67, 85, -92, 106, -32, 13, -27, -11, -73, 57, -95, -100, 127, 71,
      112, 111, -107, -62, 42, 126, 41, 6, -75, 91, 107, 62, 15, -126, -89, 79,
      63, 39, -88, 31, -17, 47, -29, 65, 78, -40, -5, -72, 120, 23, 36, -24,
      -108, 66, 122, 113, 5, 45, 75, -109, 59, -6, -16, 70, -36, -2, -1, 53,
      29, -94, -13, 69, 68, -59, -4, 105, -76, -58, -39, -3, 93, 84, -7, -43,
      125, 87, 99, -93, 9, 30, 49, -71, -37, 58, 46, -82, -119, -25, -64, -19,
      -14, 86, 92, -28, 124, -83, 32, 12, -21, -114, -60, 33, 64, 77, -122,
      -113, -101, -98, -34, 83, 73, 40, 117, 37, -110, 16, 60, -49, -128, -74,
      118, -87, -112, 119, -103, 14, -56, 35, 76, -66, 102, 56, 110, -38, -48,
      -115, 3, -77, -96, 18, -12, -120, -68, -52, 100, -57, 22, 74, -116, -10,
      -55, 96, -91, 21, 90, 7, -118, -65, -123, 19, -54, -53, 10, -46, -51,
      -42, -117, -106, 44, 82, -45, -63, -102, 123, -31, 50, 51, -111, 48, -86,
      -127, -85, 97, 25, 55, 52, 8
    ];

    let sorted_list: [i8; 256] = [
      -128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117,
      -116, -115, -114, -113, -112, -111, -110, -109, -108, -107, -106, -105,
      -104, -103, -102, -101, -100, -99, -98, -97, -96, -95, -94, -93, -92,
      -91, -90, -89, -88, -87, -86, -85, -84, -83, -82, -81, -80, -79, -78,
      -77, -76, -75, -74, -73, -72, -71, -70, -69, -68, -67, -66, -65, -64,
      -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50,
      -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36,
      -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22,
      -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7,
      -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
      33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
      51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
      69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
      87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
      104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
      118, 119, 120, 121, 122, 123, 124, 125, 126, 127
    ];

    assert_eq!(quicksort_8_bits(&unsorted_list.to_vec()), sorted_list.to_vec());
  }
}
